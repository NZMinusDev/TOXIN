@use "sass:list";
@use "sass:string";

/*
 * Adjustable size depending on the user's device, if you need upper or lower border for fixed value - use this function in @media (max-width/min-width) in your project and point out the same $pcSize for default value
 * pcSize {number} - size in larger(your template width) state
 * mobSize {number} - size in smaller(page width 320px) state
 * templateWidth {number} - width of larger template in figma or smth else
 */
@function getLiquidSize($pcSize: 10, $mobSize: 5, $templateWidth: 1440) {
  $addSize: $pcSize - $mobSize;
  $maxWidth: $templateWidth - 320;
  @return calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth}));
}

// with .
@function resolveUnresolvedAssetPath($path, $newExt) {
  $filePath: list.nth(parsePath($path), 1);

  // resolve path for generated in runtime images: @assets -> ./../../assets
  $resolvedFilePath: string.insert(string.slice($filePath, 2), './../../', 0);

  @return $resolvedFilePath + $newExt;
}

@function parsePath($path) {
  $pathExtensionIndex: string.index($path, '.');
  $filePath: string.slice($path, 0, $pathExtensionIndex - 1);
  $fileExt: string.slice($path, $pathExtensionIndex + 1);

  @return ($filePath, $fileExt);
}
