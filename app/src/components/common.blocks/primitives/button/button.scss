@use '@themes/main/gradients.scss';

.button {
  $y-padding: 14px / 12px * 1em;
  $x-padding: 20px / 12px * 1em;

  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $y-padding $x-padding;
  min-width: 2em;
  border-radius: #{(2 * $y-padding + 1em) / 2} / 50%;
  text-transform: uppercase;
  white-space: nowrap;

  @media print, screen and (color) {
    color: white;
    font: var(--font__h3);
  }

  &_appearance_filled {
    background: rgba(169, 169, 169, 1);

    @media print, screen and (color) {
      background: gradients.primary(1);
    }

    &:hover {
      background: rgba(169, 169, 169, 0.5);

      @media print, screen and (color) {
        background: gradients.primary(0.5);
      }
    }
  }
  &_appearance_bordered {
    $border-width: 2px;

    padding-right: calc(#{$x-padding} - #{$border-width});
    padding-left: calc(#{$x-padding} - #{$border-width});
    border: #{$border-width} solid transparent;
    background: linear-gradient(
          180deg,
          rgba(169, 169, 169, 1),
          rgba(169, 169, 169, 1)
        )
        padding-box,
      linear-gradient(180deg, rgba(0, 0, 0, 1), rgba(0, 0, 0, 1)) border-box;

    @media print, screen and (color) {
      background: linear-gradient(180deg, white, white) padding-box,
        gradients.primary(1) border-box;
      color: rgba(var(--color__primary), 1);
    }

    &:hover {
      background: linear-gradient(
            180deg,
            rgba(169, 169, 169, 0.5),
            rgba(169, 169, 169, 0.5)
          )
          padding-box,
        linear-gradient(180deg, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))
          border-box;

      @media print, screen and (color) {
        background: linear-gradient(180deg, white, white) padding-box,
          gradients.primary(0.5) border-box;
      }
    }

    &.button_horizontal-padding_large {
      padding-right: calc(#{26px / 12px * 1em} - #{$border-width});
      padding-left: calc(#{26px / 12px * 1em} - #{$border-width});
    }

    &.button_vertical-padding_small {
      padding-top: calc(#{9px / 12px * 1em} - #{$border-width});
      padding-bottom: calc(#{10px / 12px * 1em} - #{$border-width});
    }
  }
  &_appearance_like-a-icon-link {
    padding: initial;
    width: initial;
    height: initial;
    border: 0;
    color: rgba(0, 0, 0, 1);

    @media print, screen and (color) {
      color: rgba(var(--color__primary), 1);
    }

    &:hover {
      color: rgba(0, 0, 0, 0.5);

      @media print, screen and (color) {
        color: rgba(var(--color__dark-shade), 0.5);
      }
    }
  }
  &_appearance_like-a-link {
    $icon-width: 44px / 12px * 1em;

    position: relative;
    padding-right: $icon-width + $x-padding;
    padding-left: $icon-width + $x-padding;
    width: 100%;
    background: rgba(169, 169, 169, 1);

    @media print, screen and (color) {
      background: gradients.primary(1);
    }

    &:hover {
      background: rgba(169, 169, 169, 0.5);

      @media print, screen and (color) {
        background: gradients.primary(0.5);
      }
    }
  }

  // also it should be redefined in &_appearance_bordered
  &_horizontal-padding_large {
    padding-right: 26px / 12px * 1em;
    padding-left: 26px / 12px * 1em;
  }

  // also it should be redefined in &_appearance_bordered
  &_vertical-padding_small {
    padding-top: 9px / 12px * 1em;
    padding-bottom: 10px / 12px * 1em;
  }

  &__icon {
    position: absolute;
    height: 100%;
    color: white;

    &_position_right {
      top: 0;
      right: 0;
    }
  }
}
