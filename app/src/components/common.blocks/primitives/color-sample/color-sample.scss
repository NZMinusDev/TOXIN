@use 'sass:map';
@use '@shared/utils/styles/mixins.scss';

.color-sample {
  display: grid;
  grid: 'sample name' #{70px / 14px * 1em} / #{70px / 14px * 1em} 1fr;
  grid-column-gap: 40px / 14px * 1em;
  place-items: center left;

  @media print, screen and (color) {
    $theme-colors: (
      'color__dark-shade_100': rgb(var(--main-common-color) / 1),
      'color__dark-shade_75': rgb(var(--main-common-color) / 0.75),
      'color__dark-shade_50': rgb(var(--main-common-color) / 0.5),
      'color__dark-shade_25': rgb(var(--main-common-color) / 0.25),
      'color__dark-shade_5': rgb(var(--main-common-color) / 0.05),
      'color__primary_100': rgb(var(--main-primary-color) / 1),
      'color__secondary_100': rgb(var(--main-secondary-color) / 1),
    );

    $counter: 1;
    @each $color-name, $color-value in $theme-colors {
      &:nth-child(#{$counter}) > &__sample {
        background-color: map.get($theme-colors, $color-name);
      }
      /* stylelint-disable-next-line order/order */
      $counter: $counter + 1;
    }
  }

  &__sample {
    width: 100%;
    height: 100%;
    border-radius: 6px;
    background-color: red;
    grid-area: sample;
  }

  &__name {
    margin: 0;
    grid-area: name;

    @media print, screen and (color) {
      @include mixins.unify-parent('h1') {
        color: rgb(var(--main-common-color) / 1);
      }
      @include mixins.unify-parent('h2') {
        color: rgb(var(--main-common-color) / 1);
      }
      @include mixins.unify-parent('h3') {
        color: rgb(var(--main-common-color) / 1);
      }
    }

    @include mixins.unify-parent('h1') {
      font: var(--h1-font);
    }
    @include mixins.unify-parent('h2') {
      font: var(--h2-font);
      line-height: 27.5px / 19px * 1em;
    }
    @include mixins.unify-parent('h3') {
      text-transform: uppercase;
      font: var(--h3-font);
    }
  }

  &__value {
    display: block;
    text-transform: uppercase;
    font-weight: 400;
  }
}
