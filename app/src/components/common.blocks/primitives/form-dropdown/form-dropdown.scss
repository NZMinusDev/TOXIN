@use '@utils/devTools/styles/mixins.scss';

.form-dropdown {
  &_with-item-quantity {
    .form-dropdown__field {
      &:hover,
      &:focus-within {
        border-color: rgba(0, 0, 0, 1);
        color: rgba(0, 0, 0, 1);

        @media print, screen and (color) {
          border: var(--border-hover);
          color: rgba(var(--color__dark-shade), 0.75);
        }
      }
    }

    .form-dropdown__expand-btn {
      color: inherit;
    }

    &.form-dropdown_opened {
      .form-dropdown__field {
        border-color: rgba(0, 0, 0, 1);
        border-radius: var(--border-radius-size) var(--border-radius-size) 0 0;
        color: rgba(0, 0, 0, 1);

        @media print, screen and (color) {
          border: var(--border-hover);
          color: rgba(var(--color__dark-shade), 0.75);
        }
      }
    }
  }

  &__field {
    position: relative;
    display: flex;
    min-width: 2em;
    min-height: 2em;
    height: 44px / 14px * 1em;
    border: 1px solid rgba(0, 0, 0, 0.5);
    border-radius: var(--border-radius-size);
    color: rgba(0, 0, 0, 0.5);
    text-indent: 15px / 14px * 1em;

    @media print, screen and (color) {
      border: var(--border);
      color: rgba(var(--color__dark-shade), 0.25);
    }
  }

  &__expand-btn {
    z-index: 1;
    display: inline-flex;
    justify-content: flex-end;
    padding: 0;
    width: 100%;
    height: 100%;
    outline: none;
    border-width: 0;
    background-color: transparent;
    color: inherit;
    text-align: inherit;
    text-indent: inherit;
    font: inherit;
    cursor: pointer;

    @media print, screen and (color) {
      color: rgba(var(--color__dark-shade), 0.5);
    }
  }

  &__datepicker {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 100;
    text-indent: initial;
    cursor: initial;

    /* lib redefinition */
    .datepicker-inline {
      position: absolute;
      top: 5.56px;
    }

    &_hidden {
      display: none;
    }
  }

  &__item-quantity-list {
    position: absolute;
    width: 100%;
    height: 100%;

    /* lib redefinition */
    .iqdropdown {
      display: flex;
      padding: 0;
      height: 100%;
      border: 0;
      border-radius: 0;
      text-align: inherit;
      text-indent: inherit;

      &.menu-open {
        .iqdropdown-menu {
          border-radius: 0 0 var(--border-radius-size) var(--border-radius-size);

          @media print, screen and (color) {
            border: var(--border-hover);
          }

          button.button-decrement,
          button.button-increment {
            font: inherit;

            @media print, screen and (color) {
              border: var(--border-hover);
            }

            &:disabled {
              cursor: auto;

              @media print, screen and (color) {
                border: var(--border);
              }
            }

            &::before {
              @media print, screen and (color) {
                color: rgba(var(--color__dark-shade), 0.5);
              }
            }
          }
          .counter {
            @media print, screen and (color) {
              color: rgba(var(--color__dark-shade), 1);
              font: var(--font__h3);
            }
          }
        }

        .iqdropdown-item {
          text-transform: uppercase;
          font: var(--font__h3);

          @media print, screen and (color) {
            color: rgba(var(--color__dark-shade), 1);
          }
        }
      }

      & *:focus {
        outline-style: solid;
      }
    }
    .iqdropdown-selection {
      flex: none;
      width: (15px + 160px) / 266px * 100%;
      color: inherit;
      font: inherit;

      @media print, screen and (color) {
        color: rgba(var(--color__dark-shade), 0.75);
      }
      @include mixins.ellipsis-text();

      // remove lib selection-icon
      &::after {
        display: none;
      }
    }
    .iqdropdown-menu {
      top: 44px / 14px * 1em;
      padding: #{6px / 14px * 1em} #{6px / 14px * 1em} #{6px / 14px * 1em} #{14px /
        14px * 1em};
      border: 1px solid black;
      box-shadow: initial;
      transition: none;
    }
    .iqdropdown-menu-option {
      padding: 0;
      height: initial;
      text-indent: 0;

      &:not(:first-of-type) {
        margin-top: #{7px / 14px * 1em};
      }
    }
    .iqdropdown-content {
      margin-right: 1em;
      padding-right: 0;
    }
    //replace lib buttons' icons
    .icon-decrement,
    .icon-increment {
      display: none;
    }
    .form-dropdown__counter-control {
      display: flex;
      align-items: center;

      button.button-decrement,
      button.button-increment {
        width: #{30px / 14px * 1em};
        height: #{30px / 14px * 1em};
        border: 1px solid black;
        border-radius: 100%;
      }
      button.button-decrement::before {
        content: '-';
      }
      button.button-increment::before {
        content: '+';
      }

      .counter {
        display: inline-block;
        width: #{32px / 12px * 1em};
        text-align: center;
        @include mixins.ellipsis-text();
      }
    }
  }

  &__link-btns {
    margin-top: 20px / 14px * 1em;
    margin-bottom: 6px / 14px * 1em;
  }

  &__selection-text {
    position: absolute;
    display: inline-flex;
    align-items: center;
    margin: 0;
    width: (15px + 103px) / 150px * 100%;
    height: 100%;

    @media print, screen and (color) {
      color: rgba(var(--color__dark-shade), 0.75);
    }
    @include mixins.ellipsis-text();
  }
}
