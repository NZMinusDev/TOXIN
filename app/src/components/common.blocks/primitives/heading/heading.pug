//-
  heading: { [tag: string]: text }, example: { h3: 'awesome heading' }
  description?: string - description text
  isLabel?: boolean - if true, add nested label tag and take a block of pug
    labelJustifyContent?: 'spread'(space-between) - justify-content of label inside heading
  marginBottom?: 'small'(0.4167em) | 'medium'(1em) | 'large'(1.33em) | 'extra-large'(1.67em) - bottom margin
  Tip: mixin also uses 'and attributes'(&attributes)
mixin heading(heading, { description = '', isLabel = false, labelJustifyContent = undefined, marginBottom = undefined } = {})
  -
    const headingTag = Object.keys(heading)[0];
    const interactiveLabelClass = attributes.for && `heading__label_interactive`;
    const labelJustifyContentClass = labelJustifyContent &&`heading__label_justify-content_${labelJustifyContent}`;
    const marginBottomCLass = marginBottom && `heading_margin-bottom_${marginBottom}`;
  if isLabel
    #{headingTag}.heading(class=[marginBottomCLass])
      label.heading__label(class=[interactiveLabelClass,labelJustifyContentClass])&attributes(attributes)= heading[headingTag]
        block
      if description
        label.heading__description= description
  else
    #{headingTag}.heading(class=[marginBottomCLass])= heading[headingTag]
