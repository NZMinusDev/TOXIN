include ~@common.blocks/primitives/heading/heading.pug

//-
  heading?: { [tag: string]: string }, example: { h3: 'awesome heading' }
  name?: string - name of input field
  type?: 'text' | 'email' | 'password' | 'date' - type of field for validation 
  placeholder?: string - placeholder text
  value?: string - init value of field
  autofocus?: boolean - autofocus of field
  materialIcon?: string - material icon name for submit btn in field
  isFilter?: boolean - if true, input change event will reload page with chosen value(get method)
  Tip: mixin also uses 'and attributes'(&attributes)
mixin form-text-field({ heading = '', name = 'text-field', type = 'text', placeholder = '', value = '', autofocus = false, materialIcon = '', isFilter = false } = {})
  -
    const allowedInputMaskTypes = ['text', 'search', 'tel', 'url', 'password'];
    const allowedInputmodeAttribute = [
      'none',
      'text',
      'decimal',
      'numeric',
      'tel',
      'search',
      'email',
      'url',
    ];
    const reservedPlaceholders = { email: 'Email', password: 'Пароль', date: 'ДД.ММ.ГГГГ' };

    const componentClassModificator = type
      ? `form-text-field_type-${type}`
      : '';
    const inputMaskType = allowedInputMaskTypes.find((inputMaskType) => inputMaskType === type) || 'text';
    const inputModeAttr =
      allowedInputmodeAttribute.find((attr) => attr === type);
  .form-text-field(class=componentClassModificator)&attributes(attributes)
    if heading
      +heading(heading, { isLabel: true })(for=name)
    .form-field
      input.form-text-field__input(
        data-is-filter=isFilter ? `${isFilter}` : undefined,
        type=inputMaskType,
        inputmode=inputModeAttr,
        name=name,
        id=name,
        placeholder=reservedPlaceholders[type] || placeholder,
        value=value,
        autofocus=autofocus
      )
      if materialIcon
        button.icon.form-text-field__link-icon(type="submit", data-icon=materialIcon)
