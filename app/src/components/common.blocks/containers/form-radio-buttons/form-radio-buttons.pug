include ~@common.blocks/primitives/heading/heading.pug
include ~@common.blocks/primitives/svg-gradient/svg-gradient.pug

//-
  heading?: see mixin heading
  buttons: {
    [value: string]: {
      label: string,
      checked?: boolean
  }}
  name?: string - name of group
  disabled?: boolean - same as fieldset disabled (disable all buttons)
  isFilter?: boolean - if true, change event will reload page with chosen value(get method)
  Tip: mixin also uses 'and attributes'(&attributes)
mixin form-radio-buttons({ heading = undefined, name = 'radio', buttons = {}, disabled = false, isFilter = false } = {})
  .form-radio-buttons.js-form-radio-buttons&attributes(attributes)
    if heading
      .form-radio-buttons__heading
        +heading(heading)
    fieldset.form-radio-buttons__fieldset.js-form-radio-buttons__fieldset(
      disabled=disabled,
      data-is-filter=isFilter
    )
      -
        const { nanoid } = require('nanoid/non-secure');

        const SVGGradientID = `id-${nanoid()}`;
        let index = 0;
      each btn, key in buttons
        .form-radio-buttons__item
          input.form-radio-buttons__button-item(
            id=key,
            type="radio",
            name=name,
            checked=btn.checked,
            value=key
          )
          svg.form-radio-buttons__button-icon-item(
            viewBox="0 0 20 20",
            xmlns="http://www.w3.org/2000/svg",
            style=`--SVG-gradient-ID: url(#${SVGGradientID})`
          )
            rect.form-radio-buttons__button-icon-ring(
              x="0.5",
              y="0.5",
              width="19",
              height="19",
              rx="50%"
            )
            rect.form-radio-buttons__button-icon-circle(
              x="4",
              y="4",
              width="12",
              height="12",
              rx="6"
            )
            if index === 0
              defs
                -
                  const buttonIconCircleGradientColors = [{ var: '--main-active-color', offset: 0 }, { var: '--additional-active-color', offset: 1 }];
                +svg-gradient(SVGGradientID, 'linear', buttonIconCircleGradientColors)
            -
              index += 1;
          label.form-radio-buttons__label-item(for=key)= btn.label
